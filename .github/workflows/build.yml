name: Build/release

on: [push, workflow_dispatch]

jobs:
  release:
    runs-on: macos-latest

    environment:
      name: ${{ github.ref_name == 'main' && 'production' || 'staging' }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Create notarization certificate file
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.APPLE_API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8

      - name: Set package name
        run: |
          npm pkg set name=${{ vars.PACKAGE_NAME }}

      - name: Build/release Electron app
        uses: Dozorengel/action-electron-builder@v1.7.0
        env:
          VITE_MODE: ${{ vars.VITE_MODE }}
          VITE_API_PATH: ${{ vars.VITE_API_PATH }}
          VITE_AUTH_APP_URL: ${{ vars.VITE_AUTH_APP_URL }}
          VITE_LOGIN_IS_REQUIRED: ${{ vars.VITE_LOGIN_IS_REQUIRED }}
          VITE_PROTOCOL_SCHEME: ${{ vars.VITE_PROTOCOL_SCHEME }}
          VITE_PRODUCT_NAME: ${{ vars.VITE_PRODUCT_NAME }}

          MODE: ${{ vars.MODE }}
          PACKAGE_NAME: ${{ vars.PACKAGE_NAME }}
          PRODUCT_NAME: ${{ vars.PRODUCT_NAME }}
          UPDATE_URL: ${{ vars.UPDATE_URL }}

          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_API_KEY: ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          release: true
          build_script_name: package
          args: --config electron-builder.ts --mac --windows -c.compression=maximum
